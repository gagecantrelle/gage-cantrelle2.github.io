// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(arr) {
  //creat a varaible that holds all values in a single array
  var all = []
  //loop through arr
  for(let i = 0; i < arr.length; i++){
    //loop through the array in arr
    for(let j = 0; j < arr[i].length; j++){
      //push the curent array curent value in to all
      all.push(arr[i][j]);
    }
  }
  //return all
  return all;
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(start, functest, update, value) {
  //loop through useing given paramters
  for(let i = start; functest(i); i = update(i)){
    //run values function
    value(i);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, test) {
  //create a varaible that will hold true or false
  var istrue = true
  //loop through arr
  for(let i = 0; i < arr.length; i++){
    //run the given test function
    if(!test(arr[i])){
      //set is true to false
      istrue = false;
    }
  }
//return istrue
return istrue;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  let counted = countBy(str, char => {
    let charscript = characterScript(char.codePointAt(0));
    return charscript ? charscript.direction : "none";
  }).filter(({name}) => name != "none");
  if (counted.length == 0) return "ltr";

  return counted.reduce((a, b) => a.count > b.count ? a : b).name;
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
